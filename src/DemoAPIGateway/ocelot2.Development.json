{
  "Routes": [
    {
      "DownstreamPathTemplate": "/swagger/v1/swagger.json",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/project/swagger/v1/swagger.json",
      "UpstreamHttpMethod": [ "Get" ],
      "ServiceName": "ProjectService",
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      }
    },
    {
      "DownstreamPathTemplate": "/swagger/v1/swagger.json",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/order/swagger/v1/swagger.json",
      "UpstreamHttpMethod": [ "Get" ],
      "ServiceName": "OrderService",
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      }
    },
    {
      "DownstreamPathTemplate": "/projects",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/projects",
      "UpstreamHttpMethod": [ "Get" ],
      "ServiceName": "ProjectService",
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "FileCacheOptions": {
        "TtlSeconds": 5, //缓存过期时间
        "Region": "regionname" //缓存名称
      },
      "RateLimitOptions": {
        "ClientWhitelist": [ "SuperClient" ], //客户端白名单
        "EnableRateLimiting": true, //是否限流
        "Period": "5s", //1s，5m，1h，1d
        "PeriodTimespan": 2, //代表客户端达到请求上限多少秒后可以重试
        "Limit": 1 //客户端在定义的时间内可以发出的最大请求数
      },
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "projectService",
        "AllowScopes": []
      }
    },
    {
      "DownstreamPathTemplate": "/orders",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/orders",
      "UpstreamHttpMethod": [ "Get" ],
      "ServiceName": "OrderService",
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "FileCacheOptions": {
        "TtlSeconds": 5,
        "Region": "regionname"
      },
      "RateLimitOptions": {
        "ClientWhitelist": [ "SuperClient" ],
        "EnableRateLimiting": true,
        "Period": "5s",
        "PeriodTimespan": 2,
        "Limit": 1
      },
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "orderService",
        "AllowScopes": []
      }
    },
    {
      "DownstreamPathTemplate": "/orders/{url}",
      "DownstreamScheme": "http",
      "UpstreamPathTemplate": "/orders/{url}",
      "UpstreamHttpMethod": [ "Get", "Post" ],
      "ServiceName": "OrderService",
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "FileCacheOptions": {
        "TtlSeconds": 5,
        "Region": "regionname"
      },
      "RateLimitOptions": {
        "ClientWhitelist": [ "SuperClient" ],
        "EnableRateLimiting": true,
        "Period": "5s",
        "PeriodTimespan": 2,
        "Limit": 2
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 1000,
        "TimeoutValue": 5000
      }
    },
    {
      "DownstreamPathTemplate": "/{url}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 9080
        }
      ],
      "UpstreamPathTemplate": "/auth/{url}",
      "UpstreamHttpMethod": [
        "Get",
        "Post"
      ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      }
    }
  ],
  "GlobalConfiguration": { //添加服务发现
    "BaseUrl": "http://apigateway:9070",
    "ServiceDiscoveryProvider": {
      "Scheme": "http",
      "Host": "localhost",
      "Port": 8500,
      "Type": "Consul"
    },
    "RateLimitOptions": { //限制配置
      "DisableRateLimitHeaders": false, //是否禁用X-Rate-Limit和Retry-After标端的消息
      "QuotaExceededMessage": "too many requests...", //代表请求达到上限时返回给客户端的消息
      "HttpStatusCode": 999, //代表请求达到上限时返回给客户端的HTTP状态代码
      "ClientIdHeader": "Test" //可以允许自定义用于标识客户端的标头。默认情况下为“ ClientId”
    },
    "QoSOptions": { //熔断配置,当服务发生3次错误时，那么就熔断10秒，期间客户端的请求直接返回错误，10秒之后恢复
      "ExceptionsAllowedBeforeBreaking": 3, //代表发生错误的次数
      "DurationOfBreak": 10000, //代表熔断时间
      "TimeoutValue": 5000 //代表超时时间
    }
    //官网https://ocelot.readthedocs.io/en/latest/
  }
}